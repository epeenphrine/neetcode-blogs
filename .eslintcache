[{"/mnt/raid-0/development/projects/react/neetcode-blogs/src/index.js":"1","/mnt/raid-0/development/projects/react/neetcode-blogs/src/App.js":"2","/mnt/raid-0/development/projects/react/neetcode-blogs/src/reportWebVitals.js":"3","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/testing/Testing.js":"4","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/navbar/Navbar.js":"5","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/home/Home.js":"6","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/ReactjsDirectory.js":"7","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/templates/ApiRequest.js":"8","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/templates/BrowserRouter.js":"9","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/python/templates/Flask.js":"10","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/python/PythonDirectory.js":"11"},{"size":500,"mtime":1606967930465,"results":"12","hashOfConfig":"13"},{"size":1360,"mtime":1607106793314,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1606967930465,"results":"15","hashOfConfig":"13"},{"size":566,"mtime":1606969903061,"results":"16","hashOfConfig":"13"},{"size":1512,"mtime":1607106288345,"results":"17","hashOfConfig":"13"},{"size":1858,"mtime":1607107695312,"results":"18","hashOfConfig":"13"},{"size":1353,"mtime":1607106415645,"results":"19","hashOfConfig":"13"},{"size":1160,"mtime":1607107404275,"results":"20","hashOfConfig":"13"},{"size":2031,"mtime":1607108005505,"results":"21","hashOfConfig":"13"},{"size":2941,"mtime":1607107130682,"results":"22","hashOfConfig":"13"},{"size":993,"mtime":1607106996230,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"gou26q",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"/mnt/raid-0/development/projects/react/neetcode-blogs/src/index.js",[],["54","55"],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/App.js",[],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/reportWebVitals.js",[],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/testing/Testing.js",["56"],"import React from \"react\";\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport default function Testing() {\n  const codeString =\n    \"def testing(lol):\\n\\t             'yup i'm going to do this thing' \";\n  return (\n    <div>\n      <p>highlight the language of your choice</p>\n      <SyntaxHighlighter language=\"jsx\" style={docco}>\n        {`\n            <div className=\"App\">\n                <Testing />\n            </div>\n          `}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n",["57","58"],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/navbar/Navbar.js",["59","60"],"import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function Navbar() {\n  const { pathname, search, hash } = useLocation();\n  console.log(pathname);\n  const navbarDirList = [\"Python\", \"ReactJs\", \"Docker\", \"Linux\"];\n  const navbarDir = navbarDirList.map((item) => {\n    if (pathname.includes(item.toLowerCase())) {\n      return <div className=\"navbar-brand\">{item}</div>;\n    } else {\n      return (\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href={`/${item.toLowerCase()}`}>\n            {item}\n          </a>\n        </li>\n      );\n    }\n  });\n  return (\n    <React.Fragment>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <div className=\"container\">\n          <a className=\"navbar-brand\" href=\"/\">\n            NEETcode blogs\n          </a>\n        </div>\n      </nav>\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark mb-5\">\n        <div className=\"container\">\n          <button\n            class=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarText\"\n            aria-controls=\"navbarText\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span class=\"navbar-toggler-icon\"></span>\n          </button>\n          <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n            <ul class=\"navbar-nav mr-auto\">{navbarDir}</ul>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\n","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/home/Home.js",["61","62"],"import React from \"react\";\n\nexport default function Home() {\n  const dirList = [\"Python\", \"Reactjs\", \"Docker\", \"Linux\"];\n  const dirArray = [\n    {\n      language: \"Python\",\n      image: \"https://d1y2qj23ol72q6.cloudfront.net/2019/06/python-blog-1.jpg\",\n      description: \"python templates and libraries \",\n    },\n    {\n      language: \"Reactjs\",\n      image:\n        \"https://www.freecodecamp.org/news/content/images/2020/02/Ekran-Resmi-2019-11-18-18.08.13.png\",\n      description: \"ReactJS templates and libraries \",\n    },\n    {\n      language: \"Docker\",\n      image:\n        \"https://pbs.twimg.com/profile_images/1273307847103635465/lfVWBmiW_400x400.png\",\n      description: \"Docker templates and command \",\n    },\n    {\n      language: \"Linux\",\n      image:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/Tux.svg/1200px-Tux.svg.png\",\n      description: \"linux scripts and templates\",\n    },\n  ];\n  const dirCards = dirArray.map((card) => {\n    return (\n      <div className=\"card mx-3 mb-3\" style={{ width: \"18rem\" }}>\n        <a href={`/${card.language.toLowerCase()}`}>\n          <img\n            className=\"card-img-top\"\n            src={card.image}\n            alt=\"Card image cap\"\n            style={{ height: \"10rem\" }}\n            href={`/${card.language.toLowerCase()}`}\n          />\n        </a>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{card.language}</h5>\n          <p className=\"card-text\">{card.description}</p>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <React.Fragment>\n      <div className=\"mx-auto text-center\">\n        <h1 className=\"display-4\">NEETcode blogs</h1>\n        <p className=\"lead\">quickly find codes for projects</p>\n      </div>\n      <div className=\"container\">\n        <div className=\"row my-4\">{dirCards}</div>\n      </div>\n    </React.Fragment>\n  );\n}\n","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/ReactjsDirectory.js",["63"],"import React from \"react\";\nexport default function ReactjsDirectory() {\n  const dirArray = [\n    {\n      title: \"react-router-dom\",\n      image: \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fimages.wisegeek.com%2Furl-address.jpg&f=1&nofb=1\",\n      description: \"react directory routing\",\n      dir: \"reactjs/react-router-dom\",\n    },\n    {\n      title: \"Api request in react\",\n      image:\n        \"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwww.akamai.com%2Fus%2Fen%2Fmultimedia%2Fimages%2Fvideo%2Fakamai-api-video-thumbnail.jpg%3Fimwidth%3D1366&f=1&nofb=1\",\n      description: \"code snippet for making request\",\n      dir: \"reactjs/api-request\",\n    },\n  ];\n  const dirCards = dirArray.map((card) => {\n    return (\n      <div className=\"card mx-3\" style={{ width: \"18rem\" }}>\n        <a href={`/${card.dir}`}>\n          <img\n            className=\"card-img-top\"\n            src={card.image}\n            alt=\"Card image cap\"\n            style={{ height: \"10rem\" }}\n            href={`/${card.dir}`}\n          />\n        </a>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{card.title}</h5>\n          <p className=\"card-text\">{card.description}</p>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <React.Fragment>\n      <div className=\"row\">{dirCards}</div>\n    </React.Fragment>\n  );\n}\n","/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/templates/ApiRequest.js",[],["64","65"],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/reactjs/templates/BrowserRouter.js",[],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/python/templates/Flask.js",[],"/mnt/raid-0/development/projects/react/neetcode-blogs/src/components/python/PythonDirectory.js",["66"],"import React from \"react\";\nexport default function PythonDirectory() {\n  const dirArray = [\n    {\n      title: \"Flask\",\n      image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Flask_logo.svg/1200px-Flask_logo.svg.png\",\n      description: \"flask templates, codes I use often\",\n      dir: \"python/flask\",\n    },\n\n  ];\n  const dirCards = dirArray.map((card) => {\n    return (\n      <div className=\"card mx-3\" style={{ width: \"18rem\" }}>\n        <a href={`/${card.dir}`}>\n          <img\n            className=\"card-img-top\"\n            src={card.image}\n            alt=\"Card image cap\"\n            style={{ height: \"10rem\" }}\n            href={`/${card.dir}`}\n          />\n        </a>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{card.title}</h5>\n          <p className=\"card-text\">{card.description}</p>\n        </div>\n      </div>\n    );\n  });\n  return (\n    <React.Fragment>\n      <div className=\"row\">{dirCards}</div>\n    </React.Fragment>\n  );\n}\n",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":6,"column":9,"nodeType":"73","messageId":"74","endLine":6,"endColumn":19},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"71","severity":1,"message":"77","line":5,"column":21,"nodeType":"73","messageId":"74","endLine":5,"endColumn":27},{"ruleId":"71","severity":1,"message":"78","line":5,"column":29,"nodeType":"73","messageId":"74","endLine":5,"endColumn":33},{"ruleId":"71","severity":1,"message":"79","line":4,"column":9,"nodeType":"73","messageId":"74","endLine":4,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":34,"column":11,"nodeType":"82","endLine":40,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":22,"column":11,"nodeType":"82","endLine":28,"endColumn":13},{"ruleId":"67","replacedBy":"83"},{"ruleId":"69","replacedBy":"84"},{"ruleId":"80","severity":1,"message":"81","line":16,"column":11,"nodeType":"82","endLine":22,"endColumn":13},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'codeString' is assigned a value but never used.","Identifier","unusedVar",["85"],["86"],"'search' is assigned a value but never used.","'hash' is assigned a value but never used.","'dirList' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["85"],["86"],"no-global-assign","no-unsafe-negation"]